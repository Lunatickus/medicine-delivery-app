{"version":3,"file":"static/js/938.5157d321.chunk.js","mappings":"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","sources":["components/MedicineCartListItem/MedicineCartListItem.styled.js","components/MedicineCartListItem/MedicineCartListItem.jsx","components/MedicinesCartList/MedicineCartList.styled.js","components/MedicinesCartList/MedicineCartList.jsx","components/OrderForm/OrderForm.styled.js","components/OrderForm/OrderForm.jsx","pages/CartPage.jsx","services/api.js","services/sortByFavorite.js","services/keys.js","services/toastNotifications.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const CartListItemStyled = styled.div`\r\ndisplay: flex;\r\ngap: 30px;\r\n  width: 650px;\r\n  height: 350px;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n\r\n  .cart-list-item {\r\n    width: 350px;\r\n    height: auto;\r\n    display: block;\r\n  }\r\n\r\n  .item-content-wrapper {\r\n    width: 100%;\r\n    text-align: center;\r\n    padding: 60px 10px;\r\n  }\r\n\r\n  .item-title {\r\n    font-size: 28px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .item-price {\r\n    font-size: 20px;\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  .item-amount {\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 20px;\r\n    border-radius: 10px;\r\n    text-align: center;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { CartListItemStyled } from \"./MedicineCartListItem.styled\";\r\n\r\nexport const MedicineCartListItem = ({ medicine, changeAmount }) => {\r\n  const { image, name, price, amount } = medicine;\r\n  const [totalPrice, setTotalPrice] = useState(price);\r\n\r\n  const handleAmountChange = (e) => {\r\n    setTotalPrice(e.target.value * price);\r\n    medicine.amount = e.target.value;\r\n    changeAmount();\r\n  };\r\n\r\n  return (\r\n    <CartListItemStyled>\r\n      <img src={image} alt=\"medicine\" className=\"cart-list-item\" />\r\n      <div className=\"item-content-wrapper\">\r\n        <p className=\"item-title\">{name}</p>\r\n        <p className=\"item-price\">Price: {totalPrice}</p>\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          className=\"item-amount\"\r\n          value={amount}\r\n          onChange={handleAmountChange}\r\n        />\r\n      </div>\r\n    </CartListItemStyled>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const CartListStyled = styled.ul`\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  width: 900px;\r\n  height: 500px;\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n`;\r\n","import { MedicineCartListItem } from \"components/MedicineCartListItem/MedicineCartListItem\";\r\nimport { CartListStyled } from \"./MedicineCartList.styled\";\r\n\r\nexport const MedicineCartList = ({ medicines, changeAmount }) => {\r\n  return (\r\n    <CartListStyled>\r\n      {medicines.map((medicine) => {\r\n        return <MedicineCartListItem medicine={medicine} key={medicine._id} changeAmount={changeAmount} />;\r\n      })}\r\n    </CartListStyled>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const OrderFormStyled = styled.div`\r\n  .order-form-wrapper {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .order-form {\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    width: 700px;\r\n    height: 500px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 40px;\r\n  }\r\n\r\n  .order-form-label {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    font-size: 18px;\r\n  }\r\n\r\n  .order-form-input {\r\n    width: 400px;\r\n    font-size: 18px;\r\n    text-align: center;\r\n    padding: 8px;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .order-btn-wrapper {\r\n    display: flex;\r\n    justify-content: end;\r\n    align-items: center;\r\n    gap: 400px;\r\n  }\r\n\r\n  .order-total-price {\r\n    font-size: 28px;\r\n  }\r\n\r\n  .order-submit-btn {\r\n    font-size: 28px;\r\n    background-color: transparent;\r\n    padding: 10px 20px;\r\n    border-radius: 10px;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","import { MedicineCartList } from \"components/MedicinesCartList/MedicineCartList\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { postOrder } from \"services/api\";\r\nimport { STORAGE_KEY } from \"services/keys\";\r\nimport { toastError, toastSuccess } from \"services/toastNotifications\";\r\nimport { OrderFormStyled } from \"./OrderForm.styled\";\r\n\r\nexport const OrderForm = ({ hideContent }) => {\r\n  const [medicines, setMedicines] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(STORAGE_KEY)) ?? [];\r\n  });\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const price = medicines\r\n      .map((medicine) => medicine.price * medicine.amount)\r\n      .reduce((a, b) => a + b, 0);\r\n    setTotalPrice(price);\r\n  }, [medicines]);\r\n\r\n  const handleChangeAmount = () => {\r\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify(medicines));\r\n    setMedicines([...medicines]);\r\n  };\r\n\r\n  const handleSubmitOrder = () => {\r\n    if (!name) {\r\n      toastError(\"Name is required field\");\r\n      return;\r\n    }\r\n\r\n    if (!email) {\r\n      toastError(\"Email is required field\");\r\n      return;\r\n    }\r\n\r\n    if (!phone) {\r\n      toastError(\"Phone is required field\");\r\n      return;\r\n    }\r\n\r\n    if (!address) {\r\n      toastError(\"Address is required field\");\r\n      return;\r\n    }\r\n\r\n    postOrder({ name, email, phone, address, medicines, totalPrice });\r\n    setMedicines([]);\r\n    window.localStorage.removeItem(STORAGE_KEY);\r\n    hideContent();\r\n    toastSuccess(\"Thanks for your order\");\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPhone(\"\");\r\n    setAddress(\"\");\r\n  };\r\n\r\n  return (\r\n    <OrderFormStyled>\r\n      <div className=\"order-form-wrapper\">\r\n        <form className=\"order-form\">\r\n          <label className=\"order-form-label\">\r\n            <span>Name: </span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className=\"order-form-input\"\r\n              required\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </label>\r\n          <label className=\"order-form-label\">\r\n            <span>Email: </span>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              className=\"order-form-input\"\r\n              required\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </label>\r\n          <label className=\"order-form-label\">\r\n            <span>Phone: </span>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"phone\"\r\n              className=\"order-form-input\"\r\n              required\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </label>\r\n          <label className=\"order-form-label\">\r\n            <span>Address: </span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"address\"\r\n              className=\"order-form-input\"\r\n              required\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </label>\r\n        </form>\r\n        <MedicineCartList\r\n          medicines={medicines}\r\n          changeAmount={handleChangeAmount}\r\n        />\r\n      </div>\r\n      <div className=\"order-btn-wrapper\">\r\n        <p className=\"order-total-price\">Total price: {totalPrice}</p>\r\n        <button\r\n          className=\"order-submit-btn\"\r\n          type=\"button\"\r\n          onClick={handleSubmitOrder}\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </OrderFormStyled>\r\n  );\r\n};\r\n","import { OrderForm } from \"components/OrderForm/OrderForm\";\r\nimport { useState } from \"react\";\r\nimport { STORAGE_KEY } from \"services/keys\";\r\n\r\nconst CartPage = () => {\r\n  const [medicines, setMedicines] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(STORAGE_KEY)) ?? [];\r\n  });\r\n\r\n  const hideContent = () => {\r\n    setMedicines([]);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      {medicines.length === 0 ? (\r\n        <h2>Please choose medicine</h2>\r\n      ) : (\r\n        <OrderForm hideContent={hideContent} />\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","import axios from \"axios\";\r\nimport { sortByFavorite } from \"./sortByFavorite\";\r\n\r\naxios.defaults.baseURL = \"https://medicine-delivery-app.cyclic.app/\";\r\n\r\nexport const getAllMedicines = async () => {\r\n  try {\r\n    const { data } = await axios.get(\"/api/medicines\");\r\n    return data.data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const getMedicinesByShop = async (shop, filterPrice, filterDate) => {\r\n  let query = `shop=${shop}`;\r\n\r\n  if (filterPrice) {\r\n    query += \"&sortByPrice=asc\";\r\n  }\r\n\r\n  if (filterDate) {\r\n    query += \"&sortByDate=asc\";\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(`/api/medicines/search?${query}`);\r\n    const sortedData = sortByFavorite(data.data);\r\n    return sortedData;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const postOrder = async (order) => {\r\n  try {\r\n    const { data } = await axios.post(\"/api/orders\", order);\r\n    return data.data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const changeFavorite = async (id, value) => {\r\n  try {\r\n    const { data } = await axios.patch(`/api/medicines/${id}/favorite`, {favorite: `${value}`});\r\n    return data.data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n","export function sortByFavorite(objects) {\r\n  objects.sort((a, b) => {\r\n    if (a.favorite === b.favorite) {\r\n      return 0;\r\n    }\r\n    if (a.favorite) {\r\n      return -1;\r\n    }\r\n    return 1;\r\n  });\r\n  return objects;\r\n}\r\n","export const STORAGE_KEY = 'medicines';","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nconst toastOptions = { position: 'top-center', autoClose: 3000 };\r\n\r\nexport const toastSuccess = message => toast.success(message, toastOptions);\r\n\r\nexport const toastError = message => toast.error(message, toastOptions);"],"names":["CartListItemStyled","styled","div","_templateObject","_taggedTemplateLiteral","MedicineCartListItem","_ref","medicine","changeAmount","image","name","price","amount","totalPrice","setTotalPrice","useState","_jsxs","children","_jsx","src","alt","className","type","min","max","value","onChange","e","target","CartListStyled","ul","MedicineCartList","medicines","map","_id","OrderFormStyled","OrderForm","hideContent","setMedicines","_JSON$parse","JSON","parse","window","localStorage","getItem","STORAGE_KEY","setName","email","setEmail","phone","setPhone","address","setAddress","useEffect","reduce","a","b","required","handleChangeAmount","setItem","stringify","onClick","handleSubmitOrder","postOrder","removeItem","toastSuccess","toastError","CartPage","length","axios","defaults","baseURL","getAllMedicines","async","data","get","error","console","log","message","getMedicinesByShop","shop","filterPrice","filterDate","query","concat","objects","sort","favorite","post","order","changeFavorite","id","patch","toastOptions","position","autoClose","toast","success"],"sourceRoot":""}