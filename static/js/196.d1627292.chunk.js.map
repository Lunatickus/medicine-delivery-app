{"version":3,"file":"static/js/196.d1627292.chunk.js","mappings":"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","sources":["components/Filters/Filters.jsx","components/MedicinesHomeListItem/MedicinesHomeListItem.jsx","components/MedicinesHomeList/MedicinesHomeList.jsx","services/api.js","components/Shops/Shops.jsx","services/uniqueShops.js","pages/HomePage.jsx","services/keys.js"],"sourcesContent":["export const Filters = ({\r\n  changeFilter,\r\n  priceFilter,\r\n  dateFilter,\r\n  resetFilter,\r\n}) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n        <span>Sort by price</span>\r\n        <input type=\"radio\" onChange={changeFilter} name=\"price\" checked={priceFilter} />\r\n      </label>\r\n      <label>\r\n        <span>Sort by date added</span>\r\n        <input type=\"radio\" onChange={changeFilter} name=\"date\" checked={dateFilter} />\r\n      </label>\r\n      <button type=\"button\" onClick={resetFilter}>Reset filter</button>\r\n    </form>\r\n  );\r\n};\r\n","export const MedicinesHomeListItem = ({ medicine, addToCart }) => {\r\n    const {image, name, price} = medicine\r\n  return (\r\n    <div>\r\n      <img src={image} alt=\"medicine\" />\r\n      <p>{name}</p>\r\n      <p>{price}</p>\r\n      <button type=\"button\" onClick={() => addToCart(medicine)}>Add to cart</button>\r\n    </div>\r\n  );\r\n};\r\n","import { MedicinesHomeListItem } from \"components/MedicinesHomeListItem/MedicinesHomeListItem\";\r\n\r\n\r\nexport const MedicinesHomeList = ({ medicines, addToCart }) => {\r\n  return (\r\n    <ul>\r\n      {medicines.map((medicine) => {\r\n        return <MedicinesHomeListItem key={medicine._id} medicine={medicine} addToCart={addToCart} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://medicine-delivery-app.cyclic.app/\";\r\n\r\nexport const getAllMedicines = async () => {\r\n  try {\r\n    const { data } = await axios.get(\"/api/medicines\");\r\n    return data.data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const getMedicinesByShop = async (shop, filterPrice, filterDate) => {\r\n  let query = `shop=${shop}`;\r\n\r\n  if (filterPrice) {\r\n    query += \"&sortByPrice=asc\";\r\n  }\r\n\r\n  if (filterDate) {\r\n    query += \"&sortByDate=asc\";\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(`/api/medicines/search?${query}`);\r\n    return data.data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getAllMedicines } from \"services/api\";\r\nimport { uniqueShops } from \"services/uniqueShops\";\r\n\r\nexport const Shops = ({onSelect}) => {\r\n  const [shops, setShops] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchShops = async () => {\r\n      const resp = await getAllMedicines();\r\n      const medicineShops = uniqueShops(resp);\r\n      setShops(medicineShops);\r\n    };\r\n    fetchShops();\r\n  }, []);\r\n\r\n  const handleChangeValue = (e) => {\r\n    onSelect(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Shops:</p>\r\n      <select name=\"shop\" size=\"5\" onChange={handleChangeValue}>\r\n        {shops.map((shop) => {\r\n          return (\r\n            <option key={shop} value={shop}>\r\n              {shop}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n","export const uniqueShops = (data) => {\r\n  const shops = data.map((item) => item.shop);\r\n  const unique = {};\r\n  const result = [];\r\n\r\n  for (const shop of shops) {\r\n    unique[shop] = true;\r\n  }\r\n\r\n  for (const shop in unique) {\r\n    result.push(shop);\r\n  }\r\n\r\n  return result;\r\n};\r\n","import { Filters } from \"components/Filters/Filters\";\r\nimport { MedicinesHomeList } from \"components/MedicinesHomeList/MedicinesHomeList\";\r\n\r\nimport { Shops } from \"components/Shops/Shops\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { getMedicinesByShop } from \"services/api\";\r\nimport { STORAGE_KEY } from \"services/keys\";\r\n\r\nconst HomePage = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [medicines, setMedicines] = useState([]);\r\n  const shop = searchParams.get(\"shop\");\r\n  const [filterByPrice, setFilterByPrice] = useState(false);\r\n  const [filterByDate, setFilterByDate] = useState(false);\r\n  const [medicinesInCart, setMedicinesInCart] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(STORAGE_KEY)) ?? [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!shop) return;\r\n\r\n    const fetchMedicines = async () => {\r\n      const resp = await getMedicinesByShop(shop, filterByPrice, filterByDate);\r\n      setMedicines([...resp]);\r\n    };\r\n    fetchMedicines();\r\n  }, [shop, filterByPrice, filterByDate]);\r\n\r\n  const handleChangeShop = (value) => {\r\n    setSearchParams({ shop: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify(medicinesInCart));\r\n  }, [medicinesInCart]);\r\n\r\n  const handleChangeFilter = (e) => {\r\n    switch (e.target.name) {\r\n      case \"price\":\r\n        setFilterByPrice(true);\r\n        setFilterByDate(false);\r\n        break;\r\n      case \"date\":\r\n        setFilterByDate(true);\r\n        setFilterByPrice(false);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleResetFilter = () => {\r\n    setFilterByDate(false);\r\n    setFilterByPrice(false);\r\n  };\r\n\r\n  const handleAddToCart = (item) => {\r\n    if (medicinesInCart.some((medicine) => medicine._id === item._id)) {\r\n      return;\r\n    }\r\n    setMedicinesInCart((prevState) => [...prevState, {...item, amount: 1}]);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Shops onSelect={handleChangeShop} />\r\n      <Filters\r\n        changeFilter={handleChangeFilter}\r\n        priceFilter={filterByPrice}\r\n        dateFilter={filterByDate}\r\n        resetFilter={handleResetFilter}\r\n      />\r\n      <MedicinesHomeList medicines={medicines} addToCart={handleAddToCart} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export const STORAGE_KEY = 'medicines';"],"names":["Filters","_ref","changeFilter","priceFilter","dateFilter","resetFilter","_jsxs","children","_jsx","type","onChange","name","checked","onClick","MedicinesHomeListItem","medicine","addToCart","image","price","src","alt","MedicinesHomeList","medicines","map","_id","axios","defaults","baseURL","Shops","onSelect","shops","setShops","useState","useEffect","async","medicineShops","data","item","shop","unique","result","push","uniqueShops","get","error","console","log","message","getAllMedicines","fetchShops","size","e","target","value","HomePage","searchParams","setSearchParams","useSearchParams","setMedicines","filterByPrice","setFilterByPrice","filterByDate","setFilterByDate","medicinesInCart","setMedicinesInCart","_JSON$parse","JSON","parse","window","localStorage","getItem","STORAGE_KEY","resp","filterPrice","filterDate","query","concat","getMedicinesByShop","fetchMedicines","setItem","stringify","handleResetFilter","some","prevState","amount"],"sourceRoot":""}